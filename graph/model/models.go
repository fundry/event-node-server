// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type CreateEvent struct {
	Name        string        `json:"name"`
	Description string        `json:"description"`
	Website     string        `json:"website"`
	Email       string        `json:"Email"`
	EventType   string        `json:"eventType"`
	IsArchived  *bool         `json:"isArchived"`
	IsLocked    *bool         `json:"isLocked"`
	BucketLink  string        `json:"bucketLink"`
	CreatedBy   *CreateUser   `json:"createdBy"`
	Attendees   []*CreateUser `json:"attendees"`
	Venue       string        `json:"venue"`
	Date        int           `json:"Date"`
}

type CreatePreference struct {
	Name  string       `json:"name"`
	Color string       `json:"color"`
	Event *CreateEvent `json:"Event"`
}

type CreateUser struct {
	Name       string         `json:"name"`
	Role       *string        `json:"role"`
	Email      string         `json:"email"`
	Password   string         `json:"password"`
	BucketLink string         `json:"bucketLink"`
	Events     []*CreateEvent `json:"events"`
}

type Event struct {
	ID          int       `json:"id"`
	Name        string    `json:"name"`
	Description string    `json:"description"`
	Email       string    `json:"Email"`
	Website     string    `json:"website"`
	BucketLink  string    `json:"bucketLink"`
	Venue       string    `json:"venue"`
	EventType   string    `json:"eventType"`
	Date        int       `json:"Date"`
	IsArchived  *bool     `json:"isArchived"`
	IsLocked    *bool     `json:"isLocked"`
	CreatedAt   time.Time `json:"createdAt"`
	UpdatedAt   time.Time `json:"updatedAt"`
	Attendees   []*User   `json:"attendees"`
	CreatedBy   *User     `json:"createdBy"`
}

type Preference struct {
	ID        int       `json:"id"`
	Name      string    `json:"name"`
	Color     string    `json:"color"`
	Event     *Event    `json:"Event"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
}

type Sponsor struct {
	ID             int    `json:"id"`
	Name           string `json:"name"`
	IsOrganization *bool  `json:"isOrganization"`
}

type UpdateEvent struct {
	Name        string        `json:"name"`
	Type        string        `json:"type"`
	BucketLink  string        `json:"bucketLink"`
	Description string        `json:"description"`
	EventType   string        `json:"eventType"`
	IsArchived  *bool         `json:"isArchived"`
	IsLocked    *bool         `json:"isLocked"`
	Email       string        `json:"Email"`
	Website     string        `json:"website"`
	UpdatedAt   time.Time     `json:"updatedAt"`
	Attendees   []*CreateUser `json:"attendees"`
	Venue       string        `json:"venue"`
	Date        int           `json:"Date"`
}

type UpdatePreference struct {
	Name      string       `json:"name"`
	Color     string       `json:"color"`
	Event     *CreateEvent `json:"Event"`
	UpdatedAt time.Time    `json:"updatedAt"`
}

type UpdateUser struct {
	Name       string         `json:"name"`
	Role       *string        `json:"role"`
	Email      string         `json:"email"`
	Password   string         `json:"password"`
	BucketLink string         `json:"bucketLink"`
	Events     []*CreateEvent `json:"events"`
	UpdatedAt  time.Time      `json:"updatedAt"`
}

type User struct {
	ID         int       `json:"id"`
	Name       string    `json:"name"`
	Role       *string   `json:"role"`
	Email      string    `json:"email"`
	Password   string    `json:"password"`
	BucketLink string    `json:"bucketLink"`
	Events     []*Event  `json:"events"`
	CreatedAt  time.Time `json:"createdAt"`
	UpdatedAt  time.Time `json:"updatedAt"`
}
