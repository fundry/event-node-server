# source: http://localhost:4477
# timestamp: Mon Sep 10 2018 19:52:19 GMT-0700 (PDT)

type AggregateUser {
  count: Int!
}

type BatchPayload {
  count: Long!
}

scalar Long

type Mutation {
  # Event =============>
  createEvent(data: EventCreateInput!): Event!
  createUser(data: UserCreateInput!): User!

  # updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  # deleteUser(where: UserWhereUniqueInput!): User
  upsertUser(where: UserWhereUniqueInput, update: UserUpdateInput!): User!
  # updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!
  # deleteManyUsers(where: UserWhereInput): BatchPayload!

  # authentication
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String

  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

type Query {
  users(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [User]!

  user(where: UserWhereUniqueInput): User!
  usersConnection(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): UserConnection!

  """
  this line seems to introduces a SILENT RUNTIME ERROR if not mandatory
  """
  event(where: EventWhereUniqueInput!): Event!
  upsertEvent(where: EventWhereUniqueInput!, create: EventCreateInput!): Event!

  node(id: ID!): Node
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload

  eventMessageSubscribe(
    where: eventMessageSubscriptionWhereInput
  ): eventMessageSubscriptionPayload
}

type User implements Node {
  id: ID!
  name: String
  email: String
  password: String
}

type Event implements Node {
  id: ID!
  name: String!
  description: String
  duration: Int
  organizer: String
  type: String!
  venue: String!
  date: Int!
  supportEmail: String!
  website: String
  password: String!
  createdAt: Int
  attendees: Int
  teams: Int
}

"""
A connection to a list of items.
"""
type UserConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input EventCreateInput {
  id: ID!
  name: String!
  description: String
  duration: Int
  organizer: String
  type: String!
  venue: String!
  date: Int!
  supportEmail: String!
  website: String
  password: String!
  createdAt: Int!
  attendees: Int
  teams: Int
}

input UserCreateInput {
  id: ID!
  name: String!
  email: String!
  password: String!
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  The item at the end of the edge.
  """
  node: User!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  email: String!
  password: String!
}

type eventMessagePreviousValues {
  id: ID
  content: String
  sender: String
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

type eventMessageSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: eventMessagePreviousValues
}

input UserSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [UserSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input eventMessageSubscriptionWhereInput {
  AND: [eventMessageSubscriptionWhereInput!]

  OR: [eventMessageSubscriptionWhereInput!]

  NOT: [eventMessageSubscriptionWhereInput!]

  mutation_in: [MutationType!]

  updatedFields_contains: String

  updatedFields_contains_every: [String!]

  updatedFields_contains_some: [String!]
  node: eventMessageWhereInput
}

input UserUpdateInput {
  name: String
  email: String
  password: String
}

input GroupUpdateInput {
  name: String
  description: String
  email: String
  password: String
  website: String
  leads: Int
  teams: Int
}

input UserWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [UserWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values less than the given value.
  """
  name_lt: String

  """
  All values less than or equal the given value.
  """
  name_lte: String

  """
  All values greater than the given value.
  """
  name_gt: String

  """
  All values greater than or equal the given value.
  """
  name_gte: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  email: String

  """
  All values that are not equal to given value.
  """
  email_not: String

  """
  All values that are contained in given list.
  """
  email_in: [String!]

  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]

  """
  All values less than the given value.
  """
  email_lt: String

  """
  All values less than or equal the given value.
  """
  email_lte: String

  """
  All values greater than the given value.
  """
  email_gt: String

  """
  All values greater than or equal the given value.
  """
  email_gte: String

  """
  All values containing the given string.
  """
  email_contains: String

  """
  All values not containing the given string.
  """
  email_not_contains: String

  """
  All values starting with the given string.
  """
  email_starts_with: String

  """
  All values not starting with the given string.
  """
  email_not_starts_with: String

  """
  All values ending with the given string.
  """
  email_ends_with: String

  """
  All values not ending with the given string.
  """
  email_not_ends_with: String
  password: String

  """
  All values that are not equal to given value.
  """
  password_not: String

  """
  All values that are contained in given list.
  """
  password_in: [String!]

  """
  All values that are not contained in given list.
  """
  password_not_in: [String!]

  """
  All values less than the given value.
  """
  password_lt: String

  """
  All values less than or equal the given value.
  """
  password_lte: String

  """
  All values greater than the given value.
  """
  password_gt: String

  """
  All values greater than or equal the given value.
  """
  password_gte: String

  """
  All values containing the given string.
  """
  password_contains: String

  """
  All values not containing the given string.
  """
  password_not_contains: String

  """
  All values starting with the given string.
  """
  password_starts_with: String

  """
  All values not starting with the given string.
  """
  password_not_starts_with: String

  """
  All values ending with the given string.
  """
  password_ends_with: String

  """
  All values not ending with the given string.
  """
  password_not_ends_with: String
}

input eventMessageWhereInput {
  AND: [eventMessageWhereInput!]

  OR: [eventMessageWhereInput!]

  NOT: [eventMessageWhereInput!]
  id: ID

  id_not: ID

  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID

  id_lte: ID

  id_gt: ID

  id_gte: ID

  id_contains: ID

  id_not_contains: ID

  id_starts_with: ID

  id_not_starts_with: ID

  id_ends_with: ID

  id_not_ends_with: ID
  content: String

  content_not: String

  content_in: [String!]

  content_not_in: [String!]

  content_lt: String

  content_lte: String

  content_gt: String

  content_gte: String
  content_contains: String

  content_not_contains: String

  content_starts_with: String

  content_not_starts_with: String

  content_ends_with: String

  content_not_ends_with: String
  sender: String

  sender_not: String

  sender_in: [String!]

  sender_not_in: [String!]

  sender_lt: String
  sender_lte: String

  sender_gt: String

  sender_gte: String

  sender_contains: String

  sender_not_contains: String

  sender_starts_with: String

  sender_not_starts_with: String

  sender_ends_with: String
  sender_not_ends_with: String
}

input UserWhereUniqueInput {
  id: ID
  email: String
}

input EventWhereUniqueInput {
  id: ID
  email: String
}
